/*
 * generated by Xtext
 */
package com.tocea.codewatch.architecture.query.dsl;

import org.eclipse.xtext.scoping.IScopeProvider;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;

import com.google.inject.Binder;
import com.google.inject.name.Names;
import com.tocea.codewatch.architecture.query.dsl.generator.QueryDslGenerator;
import com.tocea.codewatch.architecture.query.dsl.scoping.QueryDslScopeProvider;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */

public class QueryDslRuntimeModule extends com.tocea.codewatch.architecture.query.dsl.AbstractQueryDslRuntimeModule {

	public Class<? extends org.eclipse.xtext.scoping.IScopeProvider> bindIScopeProvider() {
		return QueryDslScopeProvider.class;
	}
	
	public Class<? extends org.eclipse.xtext.generator.IGenerator> bindIGenerator() {
		return QueryDslGenerator.class;
	}
	
	@Override
	public void configureIScopeProviderDelegate(Binder binder) {
		binder.bind(IScopeProvider.class).annotatedWith(Names.named(AbstractDeclarativeScopeProvider.NAMED_DELEGATE)).to(QueryImportedNamespaceScopeProvider.class);
	}
	

}
